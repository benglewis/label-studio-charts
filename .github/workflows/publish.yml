name: "Upload Chart benglewis"

on:
  push:
    branches:
      - benglewis
    paths:
      - 'heartex/**'
      - '.github/workflows/publish.yml'

jobs:
  upload_chart:
    name: "Upload Chart"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - uses: hmarr/debug-action@v3.0.0

      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: '2'

      - name: Install Cosign
        uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"


      - name: Helm package
        id: helm_package
        run: |
          set -eu
          # gather only changed charts
          CHANGED_CHARTS=$(git diff --dirstat=files,0 HEAD~1 -- heartex/ | sed -E 's/^[ 0-9.]+% //g' | cut -d'/' -f2- | cut -d'/' -f1 | sort -u)
          echo "Changed charts:"
          echo "$CHANGED_CHARTS"
          CHANGED_CHARTS_MAP=""
          for chart in $CHANGED_CHARTS; do
            chart_version=$(cat heartex/$chart/Chart.yaml | yq eval '.version' -)
            helm package ./heartex/$chart -d ${{ env.SYNC_DIR }} -u
            CHANGED_CHARTS_MAP="${CHANGED_CHARTS_MAP}$chart => $chart_version\n"
          done
          echo "CHANGED_CHARTS_MAP<<EOF" >> $GITHUB_ENV
          echo "${CHANGED_CHARTS_MAP}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build helm index
        id: helm_index
        run: |
          set -eux
          helm repo index ${{ env.SYNC_DIR }} --url "${{ env.HELM_CHARTS_REPO }}" --merge "${{ env.INDEX_DIR }}/index.yaml"
          echo "==> Merged index:"
          cat "${{ env.SYNC_DIR }}/index.yaml"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0
        with:
          charts_dir: charts
          config: cr.yaml
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish and Sign OCI Charts
        run: |
          for chart in `find .cr-release-packages -name '*.tgz' -print`; do
            helm push ${chart} oci://ghcr.io/${GITHUB_REPOSITORY} |& tee helm-push-output.log
            file_name=${chart##*/}
            chart_name=${file_name%-*}
            digest=$(awk -F "[, ]+" '/Digest/{print $NF}' < helm-push-output.log)
            cosign sign "ghcr.io/${GITHUB_REPOSITORY}/${chart_name}@${digest}"
          done
        env:
          COSIGN_YES: true
